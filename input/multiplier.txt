# умножение старшими разрядами множимого вперед
## 1001 -> REG1, 0 or D
xxxx xxxx 0010 x011 x111 x011 xxxx 0001 1001
## 0101 -> REG2  0 or D
xxxx xxxx 0010 x011 x111 x011 xxxx 0010 0101
## 0 -> REG0     0 and D
xxxx xxxx 0010 x000 x111 x100 xxxx 0000 xxxx
## 0 -> Q     0 and D
xxxx xxxx 0010 x011 x111 x100 xxxx 0000 xxxx
## 3 -> REG3     0 or D
xxxx xxxx 0010 x011 x111 x011 xxxx 0011 0011
## F = 1000(D) and REG1(B)
xxxx xxxx 0010 x001 x101 x100 0001 0001 1000
## if Z = 1, to 8, don't write result
0000 1000 1100 x001 xxxx xxxx xxxx xxxx xxxx
## Q = Q + REG2(A),
xxxx xxxx 0010 x000 x000 0000 0010 xxxx xxxx
## << {REG0(A), Q} <- 0,
xxxx xxxx 0010 1 110 1 011 x011 xxxx 0000 xxxx
#             ms2   ms1
#9
## Маска, потому что неправильно реализован сдвиг влево
## Q = Q & 1110
xxxx xxxx 0010 x000 x110 x100 xxxx xxxx 1110
## REG1 shift left
xxxx xxxx 0010 x111 x011 x011 xxxx 0001 xxxx
## REG3 = REG3-1,
xxxx xxxx 0010 x011 x011 0001 xxxx 0011 xxxx
## if Z = 0 to 5, DON't write result
0000 0101 0000 x001 xxxx xxxx xxxx xxxx xxxx
## Y = REG0
xxxx xxxx 0010 x001 x011 x011 xxxx 0000 xxxx
## Y = Q
0000 1101 0001 x001 x010 x011 xxxx 0000 xxxx